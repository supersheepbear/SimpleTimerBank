{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to SimpleTimerBank","text":"<p>SimpleTimerBank is a focused, easy-to-use desktop application designed for effective time management. It's built on the concept of a time \"bank,\" where you can deposit or withdraw time, and then spend that balance using a built-in countdown timer.</p> <p>This tool is perfect for anyone who uses time-blocking techniques, needs to track work hours against a budget, or simply wants a more tangible way to manage their daily available time.</p> <p></p>"},{"location":"#core-features","title":"Core Features","text":"<ul> <li>Time Balance: Easily add or subtract time from your central time bank. The balance is always visible and is saved automatically when you close the app.</li> <li>Countdown Timer: Start a countdown timer that consumes your time balance in real-time. Pause or stop the timer at any moment.</li> <li>Data Persistence: Your remaining time balance is saved when you exit and automatically reloaded the next time you start the application.</li> <li>Standalone Executable: The entire application is packaged into a single folder for easy execution, with no installation required.</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<p>Ready to try it out? Head over to the Usage Guide to learn how to run and build the application.</p>"},{"location":"api_reference/","title":"API Reference","text":"<p>This section provides auto-generated API documentation for the core components of the SimpleTimerBank application.</p>"},{"location":"api_reference/#application-entry-point","title":"Application Entry Point","text":""},{"location":"api_reference/#simpletimerbank.main","title":"<code>simpletimerbank.main</code>","text":"<p>SimpleTimerBank Desktop Application Entry Point.</p> <p>This module serves as the main entry point for the SimpleTimerBank desktop application. It initializes the PySide6 application and manages the application lifecycle.</p>"},{"location":"api_reference/#simpletimerbank.main.main","title":"<code>main(argv=None)</code>","text":"<p>Main application entry point.</p> <p>Initializes and runs the SimpleTimerBank desktop application.</p>"},{"location":"api_reference/#simpletimerbank.main.main--parameters","title":"Parameters","text":"<p>argv : list[str], optional     Command line arguments. If None, uses sys.argv.</p>"},{"location":"api_reference/#simpletimerbank.main.main--returns","title":"Returns","text":"<p>int     Application exit code (0 for success, non-zero for error).</p>"},{"location":"api_reference/#simpletimerbank.main.main--examples","title":"Examples","text":""},{"location":"api_reference/#simpletimerbank.main.main--to-run-the-application-will-open-the-gui","title":"To run the application (will open the GUI)","text":""},{"location":"api_reference/#simpletimerbank.main.main--if-name-main","title":"if name == \"main\":","text":""},{"location":"api_reference/#simpletimerbank.main.main--sysexitmain","title":"sys.exit(main())","text":""},{"location":"api_reference/#state-management","title":"State Management","text":""},{"location":"api_reference/#simpletimerbank.core.app_state","title":"<code>simpletimerbank.core.app_state</code>","text":"<p>Application state management module.</p> <p>This module contains the AppStateManager class responsible for coordinating state across all application components and managing the application lifecycle.</p>"},{"location":"api_reference/#simpletimerbank.core.app_state.AppStateManager","title":"<code>AppStateManager</code>","text":"<p>Manages application state for the SimpleTimerBank application.</p> <p>This class coordinates state between TimeBalance, CountdownTimer, and PersistenceService components, and handles application lifecycle events.</p>"},{"location":"api_reference/#simpletimerbank.core.app_state.AppStateManager.__init__","title":"<code>__init__()</code>","text":"<p>Initialize AppStateManager with default components.</p>"},{"location":"api_reference/#simpletimerbank.core.app_state.AppStateManager.add_time","title":"<code>add_time(seconds)</code>","text":"<p>Add time to the balance.</p>"},{"location":"api_reference/#simpletimerbank.core.app_state.AppStateManager.add_time--parameters","title":"Parameters","text":"<p>seconds : int     Number of seconds to add to the balance.</p>"},{"location":"api_reference/#simpletimerbank.core.app_state.AppStateManager.add_time--raises","title":"Raises","text":"<p>ValueError     If seconds is negative.</p>"},{"location":"api_reference/#simpletimerbank.core.app_state.AppStateManager.get_balance_formatted","title":"<code>get_balance_formatted()</code>","text":"<p>Get current balance as formatted string.</p>"},{"location":"api_reference/#simpletimerbank.core.app_state.AppStateManager.get_balance_formatted--returns","title":"Returns","text":"<p>str     Current balance formatted as HH:MM:SS.</p>"},{"location":"api_reference/#simpletimerbank.core.app_state.AppStateManager.get_balance_seconds","title":"<code>get_balance_seconds()</code>","text":"<p>Get current balance in seconds.</p>"},{"location":"api_reference/#simpletimerbank.core.app_state.AppStateManager.get_balance_seconds--returns","title":"Returns","text":"<p>int     Current time balance in seconds.</p>"},{"location":"api_reference/#simpletimerbank.core.app_state.AppStateManager.get_countdown_timer","title":"<code>get_countdown_timer()</code>","text":"<p>Get reference to the countdown timer.</p>"},{"location":"api_reference/#simpletimerbank.core.app_state.AppStateManager.get_countdown_timer--returns","title":"Returns","text":"<p>CountdownTimer     Reference to CountdownTimer instance.</p>"},{"location":"api_reference/#simpletimerbank.core.app_state.AppStateManager.get_persistence_service","title":"<code>get_persistence_service()</code>","text":"<p>Get reference to the persistence service.</p>"},{"location":"api_reference/#simpletimerbank.core.app_state.AppStateManager.get_persistence_service--returns","title":"Returns","text":"<p>PersistenceService     Reference to PersistenceService instance.</p>"},{"location":"api_reference/#simpletimerbank.core.app_state.AppStateManager.get_time_balance","title":"<code>get_time_balance()</code>","text":"<p>Get reference to the time balance manager.</p>"},{"location":"api_reference/#simpletimerbank.core.app_state.AppStateManager.get_time_balance--returns","title":"Returns","text":"<p>TimeBalance     Reference to TimeBalance instance.</p>"},{"location":"api_reference/#simpletimerbank.core.app_state.AppStateManager.get_timer_state","title":"<code>get_timer_state()</code>","text":"<p>Get current timer state.</p>"},{"location":"api_reference/#simpletimerbank.core.app_state.AppStateManager.get_timer_state--returns","title":"Returns","text":"<p>TimerState     Current state of the timer.</p>"},{"location":"api_reference/#simpletimerbank.core.app_state.AppStateManager.initialize","title":"<code>initialize()</code>","text":"<p>Initialize application state and load saved data.</p>"},{"location":"api_reference/#simpletimerbank.core.app_state.AppStateManager.pause_timer","title":"<code>pause_timer()</code>","text":"<p>Pause the countdown timer.</p>"},{"location":"api_reference/#simpletimerbank.core.app_state.AppStateManager.set_balance","title":"<code>set_balance(seconds)</code>","text":"<p>Set the time balance to an absolute value.</p>"},{"location":"api_reference/#simpletimerbank.core.app_state.AppStateManager.set_balance--parameters","title":"Parameters","text":"<p>seconds : int     The total number of seconds to set the balance to.</p>"},{"location":"api_reference/#simpletimerbank.core.app_state.AppStateManager.set_balance--raises","title":"Raises","text":"<p>ValueError     If seconds is negative.</p>"},{"location":"api_reference/#simpletimerbank.core.app_state.AppStateManager.set_timer_callback","title":"<code>set_timer_callback(callback)</code>","text":"<p>Set callback function to be called every timer tick.</p>"},{"location":"api_reference/#simpletimerbank.core.app_state.AppStateManager.set_timer_callback--parameters","title":"Parameters","text":"<p>callback : Callable[[int], None]     Function to call with remaining seconds on each tick.</p>"},{"location":"api_reference/#simpletimerbank.core.app_state.AppStateManager.shutdown","title":"<code>shutdown()</code>","text":"<p>Shutdown application and save current state.</p>"},{"location":"api_reference/#simpletimerbank.core.app_state.AppStateManager.start_timer","title":"<code>start_timer()</code>","text":"<p>Start the countdown timer.</p>"},{"location":"api_reference/#simpletimerbank.core.app_state.AppStateManager.start_timer--returns","title":"Returns","text":"<p>bool     True if timer started successfully, False if insufficient balance.</p>"},{"location":"api_reference/#simpletimerbank.core.app_state.AppStateManager.stop_timer","title":"<code>stop_timer()</code>","text":"<p>Stop the countdown timer.</p>"},{"location":"api_reference/#core-logic-components","title":"Core Logic Components","text":""},{"location":"api_reference/#simpletimerbank.core.time_balance","title":"<code>simpletimerbank.core.time_balance</code>","text":"<p>Time balance management module.</p> <p>This module contains the TimeBalance class responsible for managing the user's time balance (add time, subtract time, format display).</p>"},{"location":"api_reference/#simpletimerbank.core.time_balance.TimeBalance","title":"<code>TimeBalance</code>","text":"<p>Manages time balance operations for the SimpleTimerBank application.</p> <p>This class handles adding and subtracting time from the user's balance, formatting time for display, and validating time operations.</p>"},{"location":"api_reference/#simpletimerbank.core.time_balance.TimeBalance.__init__","title":"<code>__init__()</code>","text":"<p>Initialize TimeBalance with zero balance.</p>"},{"location":"api_reference/#simpletimerbank.core.time_balance.TimeBalance.add_time","title":"<code>add_time(seconds)</code>","text":"<p>Add time to the balance.</p>"},{"location":"api_reference/#simpletimerbank.core.time_balance.TimeBalance.add_time--parameters","title":"Parameters","text":"<p>seconds : int     Number of seconds to add to the balance.</p>"},{"location":"api_reference/#simpletimerbank.core.time_balance.TimeBalance.add_time--raises","title":"Raises","text":"<p>ValueError     If seconds is negative.</p>"},{"location":"api_reference/#simpletimerbank.core.time_balance.TimeBalance.format_time","title":"<code>format_time(seconds)</code>","text":"<p>Format seconds into HH:MM:SS string.</p>"},{"location":"api_reference/#simpletimerbank.core.time_balance.TimeBalance.format_time--parameters","title":"Parameters","text":"<p>seconds : int     Time in seconds to format.</p>"},{"location":"api_reference/#simpletimerbank.core.time_balance.TimeBalance.format_time--returns","title":"Returns","text":"<p>str     Formatted time string in HH:MM:SS format.</p>"},{"location":"api_reference/#simpletimerbank.core.time_balance.TimeBalance.format_time--raises","title":"Raises","text":"<p>ValueError     If seconds is negative.</p>"},{"location":"api_reference/#simpletimerbank.core.time_balance.TimeBalance.get_balance_formatted","title":"<code>get_balance_formatted()</code>","text":"<p>Get current balance as formatted string.</p>"},{"location":"api_reference/#simpletimerbank.core.time_balance.TimeBalance.get_balance_formatted--returns","title":"Returns","text":"<p>str     Current balance formatted as HH:MM:SS.</p>"},{"location":"api_reference/#simpletimerbank.core.time_balance.TimeBalance.get_balance_seconds","title":"<code>get_balance_seconds()</code>","text":"<p>Get current balance in seconds.</p>"},{"location":"api_reference/#simpletimerbank.core.time_balance.TimeBalance.get_balance_seconds--returns","title":"Returns","text":"<p>int     Current time balance in seconds.</p>"},{"location":"api_reference/#simpletimerbank.core.time_balance.TimeBalance.set_balance","title":"<code>set_balance(seconds)</code>","text":"<p>Set the balance to an absolute value.</p>"},{"location":"api_reference/#simpletimerbank.core.time_balance.TimeBalance.set_balance--parameters","title":"Parameters","text":"<p>seconds : int     The total number of seconds to set the balance to.</p>"},{"location":"api_reference/#simpletimerbank.core.time_balance.TimeBalance.set_balance--raises","title":"Raises","text":"<p>ValueError     If seconds is negative.</p>"},{"location":"api_reference/#simpletimerbank.core.time_balance.TimeBalance.subtract_time","title":"<code>subtract_time(seconds)</code>","text":"<p>Subtract time from the balance.</p>"},{"location":"api_reference/#simpletimerbank.core.time_balance.TimeBalance.subtract_time--parameters","title":"Parameters","text":"<p>seconds : int     Number of seconds to subtract from the balance.</p>"},{"location":"api_reference/#simpletimerbank.core.time_balance.TimeBalance.subtract_time--returns","title":"Returns","text":"<p>bool     True if subtraction was successful, False if insufficient balance.</p>"},{"location":"api_reference/#simpletimerbank.core.time_balance.TimeBalance.subtract_time--raises","title":"Raises","text":"<p>ValueError     If seconds is negative.</p>"},{"location":"api_reference/#simpletimerbank.core.countdown_timer","title":"<code>simpletimerbank.core.countdown_timer</code>","text":"<p>Countdown timer management module.</p> <p>This module contains the CountdownTimer class responsible for managing the countdown timer functionality that consumes time balance.</p>"},{"location":"api_reference/#simpletimerbank.core.countdown_timer.CountdownTimer","title":"<code>CountdownTimer</code>","text":"<p>Manages countdown timer operations for the SimpleTimerBank application.</p> <p>This class handles starting, pausing, stopping the countdown timer and coordinating with the TimeBalance to consume time.</p>"},{"location":"api_reference/#simpletimerbank.core.countdown_timer.CountdownTimer.__init__","title":"<code>__init__(time_balance=None)</code>","text":"<p>Initialize CountdownTimer.</p>"},{"location":"api_reference/#simpletimerbank.core.countdown_timer.CountdownTimer.__init__--parameters","title":"Parameters","text":"<p>time_balance : TimeBalance, optional     Reference to the time balance manager.</p>"},{"location":"api_reference/#simpletimerbank.core.countdown_timer.CountdownTimer.get_remaining_seconds","title":"<code>get_remaining_seconds()</code>","text":"<p>Get remaining time in seconds.</p>"},{"location":"api_reference/#simpletimerbank.core.countdown_timer.CountdownTimer.get_remaining_seconds--returns","title":"Returns","text":"<p>int     Remaining time in seconds, or 0 if no time balance.</p>"},{"location":"api_reference/#simpletimerbank.core.countdown_timer.CountdownTimer.get_state","title":"<code>get_state()</code>","text":"<p>Get current timer state.</p>"},{"location":"api_reference/#simpletimerbank.core.countdown_timer.CountdownTimer.get_state--returns","title":"Returns","text":"<p>TimerState     Current state of the timer.</p>"},{"location":"api_reference/#simpletimerbank.core.countdown_timer.CountdownTimer.pause","title":"<code>pause()</code>","text":"<p>Pause the countdown timer.</p>"},{"location":"api_reference/#simpletimerbank.core.countdown_timer.CountdownTimer.set_tick_callback","title":"<code>set_tick_callback(callback)</code>","text":"<p>Set callback function to be called every timer tick.</p>"},{"location":"api_reference/#simpletimerbank.core.countdown_timer.CountdownTimer.set_tick_callback--parameters","title":"Parameters","text":"<p>callback : Callable[[int], None]     Function to call with remaining seconds on each tick.</p>"},{"location":"api_reference/#simpletimerbank.core.countdown_timer.CountdownTimer.start","title":"<code>start()</code>","text":"<p>Start the countdown timer.</p>"},{"location":"api_reference/#simpletimerbank.core.countdown_timer.CountdownTimer.start--returns","title":"Returns","text":"<p>bool     True if timer started successfully, False if insufficient balance.</p>"},{"location":"api_reference/#simpletimerbank.core.countdown_timer.CountdownTimer.stop","title":"<code>stop()</code>","text":"<p>Stop the countdown timer and reset.</p>"},{"location":"api_reference/#simpletimerbank.core.countdown_timer.TimerState","title":"<code>TimerState</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Enumeration of possible timer states.</p>"},{"location":"api_reference/#simpletimerbank.core.persistence","title":"<code>simpletimerbank.core.persistence</code>","text":"<p>Data persistence service module.</p> <p>This module contains the PersistenceService class responsible for saving and loading application data to/from persistent storage.</p>"},{"location":"api_reference/#simpletimerbank.core.persistence.PersistenceService","title":"<code>PersistenceService</code>","text":"<p>Manages data persistence for the SimpleTimerBank application.</p> <p>This class handles saving and loading application state (time balance, settings, etc.) to and from local storage files.</p>"},{"location":"api_reference/#simpletimerbank.core.persistence.PersistenceService.__init__","title":"<code>__init__(data_file=None)</code>","text":"<p>Initialize PersistenceService.</p>"},{"location":"api_reference/#simpletimerbank.core.persistence.PersistenceService.__init__--parameters","title":"Parameters","text":"<p>data_file : Path, optional     Path to the data file. If None, uses default location.</p>"},{"location":"api_reference/#simpletimerbank.core.persistence.PersistenceService.data_file_exists","title":"<code>data_file_exists()</code>","text":"<p>Check if data file exists.</p>"},{"location":"api_reference/#simpletimerbank.core.persistence.PersistenceService.data_file_exists--returns","title":"Returns","text":"<p>bool     True if data file exists, False otherwise.</p>"},{"location":"api_reference/#simpletimerbank.core.persistence.PersistenceService.get_default_data_path","title":"<code>get_default_data_path()</code>","text":"<p>Get the default data file path.</p>"},{"location":"api_reference/#simpletimerbank.core.persistence.PersistenceService.get_default_data_path--returns","title":"Returns","text":"<p>Path     Default path for application data file.</p>"},{"location":"api_reference/#simpletimerbank.core.persistence.PersistenceService.load_data","title":"<code>load_data()</code>","text":"<p>Load application data from persistent storage.</p>"},{"location":"api_reference/#simpletimerbank.core.persistence.PersistenceService.load_data--returns","title":"Returns","text":"<p>dict     Dictionary containing loaded application data.     Returns empty dict if no data file exists.</p>"},{"location":"api_reference/#simpletimerbank.core.persistence.PersistenceService.save_data","title":"<code>save_data(data)</code>","text":"<p>Save application data to persistent storage.</p>"},{"location":"api_reference/#simpletimerbank.core.persistence.PersistenceService.save_data--parameters","title":"Parameters","text":"<p>data : dict     Dictionary containing application data to save.</p>"},{"location":"api_reference/#simpletimerbank.core.persistence.PersistenceService.save_data--returns","title":"Returns","text":"<p>bool     True if save was successful, False otherwise.</p>"},{"location":"api_reference/#gui-components","title":"GUI Components","text":""},{"location":"api_reference/#main-window","title":"Main Window","text":""},{"location":"api_reference/#simpletimerbank.gui.main_window","title":"<code>simpletimerbank.gui.main_window</code>","text":"<p>Main window for the SimpleTimerBank application.</p> <p>This module provides the main application window, which assembles all the GUI components and connects them to the core business logic.</p>"},{"location":"api_reference/#simpletimerbank.gui.main_window.MainWindow","title":"<code>MainWindow</code>","text":"<p>               Bases: <code>QMainWindow</code></p> <p>The main application window for SimpleTimerBank.</p> <p>This class sets up the main window, lays out all the custom widgets, and handles the integration between the GUI and the AppStateManager.</p>"},{"location":"api_reference/#simpletimerbank.gui.main_window.MainWindow.__init__","title":"<code>__init__(app_manager, parent=None)</code>","text":"<p>Initialize the MainWindow.</p>"},{"location":"api_reference/#simpletimerbank.gui.main_window.MainWindow.__init__--parameters","title":"Parameters","text":"<p>app_manager : AppStateManager     The application state manager instance. parent : QWidget, optional     The parent widget, by default None.</p>"},{"location":"api_reference/#simpletimerbank.gui.main_window.MainWindow.closeEvent","title":"<code>closeEvent(event)</code>","text":"<p>Handle the window close event.</p> <p>Ensures the application state is saved before closing.</p>"},{"location":"api_reference/#simpletimerbank.gui.main_window.MainWindow.closeEvent--parameters","title":"Parameters","text":"<p>event : QCloseEvent     The close event object.</p>"},{"location":"api_reference/#widgets","title":"Widgets","text":""},{"location":"api_reference/#simpletimerbank.gui.widgets.time_display","title":"<code>simpletimerbank.gui.widgets.time_display</code>","text":"<p>Time display widget for SimpleTimerBank.</p> <p>This module provides a widget to display the time balance in a visually appealing format, like a digital clock.</p>"},{"location":"api_reference/#simpletimerbank.gui.widgets.time_display.TimeDisplayWidget","title":"<code>TimeDisplayWidget</code>","text":"<p>               Bases: <code>QWidget</code></p> <p>A widget to display the time balance using a large QLabel.</p> <p>This widget provides a visually clear, non-editable display of the current time balance, formatted as HH:MM:SS.</p>"},{"location":"api_reference/#simpletimerbank.gui.widgets.time_display.TimeDisplayWidget.__init__","title":"<code>__init__(parent=None, font_family='Courier New')</code>","text":"<p>Initialize the TimeDisplayWidget.</p>"},{"location":"api_reference/#simpletimerbank.gui.widgets.time_display.TimeDisplayWidget.__init__--parameters","title":"Parameters","text":"<p>parent : QWidget, optional     The parent widget, by default None. font_family : str     The font family to use for the display.</p>"},{"location":"api_reference/#simpletimerbank.gui.widgets.time_display.TimeDisplayWidget.update_time","title":"<code>update_time(formatted_time)</code>","text":"<p>Update the time displayed on the widget.</p>"},{"location":"api_reference/#simpletimerbank.gui.widgets.time_display.TimeDisplayWidget.update_time--parameters","title":"Parameters","text":"<p>formatted_time : str     The time string to display, e.g., \"HH:MM:SS\".</p>"},{"location":"api_reference/#simpletimerbank.gui.widgets.time_edit","title":"<code>simpletimerbank.gui.widgets.time_edit</code>","text":"<p>Time editing widget for SimpleTimerBank.</p> <p>This module provides a widget for users to add or subtract time from their time balance.</p>"},{"location":"api_reference/#simpletimerbank.gui.widgets.time_edit.TimeEditWidget","title":"<code>TimeEditWidget</code>","text":"<p>               Bases: <code>QWidget</code></p> <p>A widget for editing the time balance.</p> <p>This widget provides spin boxes for hours, minutes, and seconds, along with \"Add Time\", \"Subtract Time\", and \"Set Time\" buttons. It emits signals when these buttons are clicked.</p>"},{"location":"api_reference/#simpletimerbank.gui.widgets.time_edit.TimeEditWidget.__init__","title":"<code>__init__(parent=None)</code>","text":"<p>Initialize the TimeEditWidget.</p>"},{"location":"api_reference/#simpletimerbank.gui.widgets.time_edit.TimeEditWidget.__init__--parameters","title":"Parameters","text":"<p>parent : QWidget, optional     The parent widget, by default None.</p>"},{"location":"api_reference/#simpletimerbank.gui.widgets.timer_control","title":"<code>simpletimerbank.gui.widgets.timer_control</code>","text":"<p>Timer control widget for SimpleTimerBank.</p> <p>This module provides a widget with Start, Pause, and Stop buttons to control the countdown timer.</p>"},{"location":"api_reference/#simpletimerbank.gui.widgets.timer_control.TimerControlWidget","title":"<code>TimerControlWidget</code>","text":"<p>               Bases: <code>QWidget</code></p> <p>A widget for controlling the countdown timer.</p> <p>This widget provides Start, Pause, and Stop buttons and emits signals when they are clicked. It also updates button states based on the current timer state.</p>"},{"location":"api_reference/#simpletimerbank.gui.widgets.timer_control.TimerControlWidget.__init__","title":"<code>__init__(parent=None)</code>","text":"<p>Initialize the TimerControlWidget.</p>"},{"location":"api_reference/#simpletimerbank.gui.widgets.timer_control.TimerControlWidget.__init__--parameters","title":"Parameters","text":"<p>parent : QWidget, optional     The parent widget, by default None.</p>"},{"location":"api_reference/#simpletimerbank.gui.widgets.timer_control.TimerControlWidget.update_button_states","title":"<code>update_button_states(state)</code>","text":"<p>Update button enabled/disabled state based on timer state.</p>"},{"location":"api_reference/#simpletimerbank.gui.widgets.timer_control.TimerControlWidget.update_button_states--parameters","title":"Parameters","text":"<p>state : TimerState     The current state of the countdown timer.</p>"},{"location":"contributing/","title":"Contributing to <code>SimpleTimerBank</code>","text":"<p>Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given.</p> <p>You can contribute in many ways:</p>"},{"location":"contributing/#types-of-contributions","title":"Types of Contributions","text":""},{"location":"contributing/#report-bugs","title":"Report Bugs","text":"<p>Report bugs at https://github.com/supersheepbear/SimpleTimerBank/issues</p> <p>If you are reporting a bug, please include:</p> <ul> <li>Your operating system name and version.</li> <li>Any details about your local setup that might be helpful in troubleshooting.</li> <li>Detailed steps to reproduce the bug.</li> </ul>"},{"location":"contributing/#fix-bugs","title":"Fix Bugs","text":"<p>Look through the GitHub issues for bugs. Anything tagged with \"bug\" and \"help wanted\" is open to whoever wants to implement a fix for it.</p>"},{"location":"contributing/#implement-features","title":"Implement Features","text":"<p>Look through the GitHub issues for features. Anything tagged with \"enhancement\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"contributing/#write-documentation","title":"Write Documentation","text":"<p>SimpleTimerBank could always use more documentation, whether as part of the official docs, in docstrings, or even on the web in blog posts, articles, and such.</p>"},{"location":"contributing/#submit-feedback","title":"Submit Feedback","text":"<p>The best way to send feedback is to file an issue at https://github.com/supersheepbear/SimpleTimerBank/issues.</p> <p>If you are proposing a new feature:</p> <ul> <li>Explain in detail how it would work.</li> <li>Keep the scope as narrow as possible, to make it easier to implement.</li> <li>Remember that this is a volunteer-driven project, and that contributions   are welcome :)</li> </ul>"},{"location":"contributing/#get-started","title":"Get Started!","text":"<p>Ready to contribute? Here's how to set up <code>SimpleTimerBank</code> for local development. Please note this documentation assumes you already have <code>uv</code> and <code>Git</code> installed and ready to go.</p> <ol> <li> <p>Fork the <code>SimpleTimerBank</code> repo on GitHub.</p> </li> <li> <p>Clone your fork locally:</p> </li> </ol> <pre><code>cd &lt;directory_in_which_repo_should_be_created&gt;\ngit clone git@github.com:YOUR_NAME/SimpleTimerBank.git\n</code></pre> <ol> <li>Now we need to install the environment. Navigate into the directory</li> </ol> <pre><code>cd SimpleTimerBank\n</code></pre> <p>Then, install and activate the environment with:</p> <pre><code>uv sync\n</code></pre> <ol> <li>Install pre-commit to run linters/formatters at commit time:</li> </ol> <pre><code>uv run pre-commit install\n</code></pre> <ol> <li>Create a branch for local development:</li> </ol> <pre><code>git checkout -b name-of-your-bugfix-or-feature\n</code></pre> <p>Now you can make your changes locally.</p> <ol> <li> <p>Don't forget to add test cases for your added functionality to the <code>tests</code> directory.</p> </li> <li> <p>When you're done making changes, check that your changes pass the formatting tests.</p> </li> </ol> <pre><code>make check\n</code></pre> <p>Now, validate that all unit tests are passing:</p> <pre><code>make test\n</code></pre> <ol> <li>Before raising a pull request you should also run tox.    This will run the tests across different versions of Python:</li> </ol> <pre><code>tox\n</code></pre> <p>This requires you to have multiple versions of python installed. This step is also triggered in the CI/CD pipeline, so you could also choose to skip this step locally.</p> <ol> <li>Commit your changes and push your branch to GitHub:</li> </ol> <pre><code>git add .\ngit commit -m \"Your detailed description of your changes.\"\ngit push origin name-of-your-bugfix-or-feature\n</code></pre> <ol> <li>Submit a pull request through the GitHub website.</li> </ol>"},{"location":"contributing/#pull-request-guidelines","title":"Pull Request Guidelines","text":"<p>Before you submit a pull request, check that it meets these guidelines:</p> <ol> <li> <p>The pull request should include tests.</p> </li> <li> <p>If the pull request adds functionality, the docs should be updated.    Put your new functionality into a function with a docstring, and add the feature to the list in <code>README.md</code>.</p> </li> </ol>"},{"location":"license/","title":"License","text":"<p>MIT License</p> <p>Copyright (c) 2025 supersheepbear</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"usage/","title":"Usage Guide","text":"<p>This guide covers how to run the SimpleTimerBank application from source and how to build the standalone executable.</p>"},{"location":"usage/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.9+</li> <li>uv build tool</li> <li><code>make</code> (optional, for convenience)</li> </ul>"},{"location":"usage/#running-from-source","title":"Running from Source","text":"<p>Running the application directly from the source code is the quickest way to get started.</p> <ol> <li> <p>Install Dependencies:     First, sync the project dependencies using <code>uv</code>.     <pre><code>uv sync\n</code></pre></p> </li> <li> <p>Run the Application:     Use the <code>uv run</code> command to execute the main script.     <pre><code>uv run simpletimerbank\n</code></pre>     The application GUI should appear on your screen.</p> </li> </ol>"},{"location":"usage/#building-the-executable","title":"Building the Executable","text":"<p>The project is configured to build a standalone executable (<code>.exe</code> on Windows) that bundles the application and all its dependencies.</p> <p>We support two build modes:</p>"},{"location":"usage/#1-fast-starting-folder-mode-for-development","title":"1. Fast-Starting Folder Mode (for Development)","text":"<p>This is the recommended mode for development and testing. It creates a folder containing the <code>.exe</code> and all its dependencies. This version starts almost instantly.</p> <pre><code>make build-exe\n</code></pre> <p>After the build completes, you will find the executable inside the <code>dist/SimpleTimerBank/</code> directory.</p>"},{"location":"usage/#2-single-file-mode-for-distribution","title":"2. Single-File Mode (for Distribution)","text":"<p>This mode creates a single, self-contained <code>.exe</code> file. This is convenient for sharing, but be aware that it will have a slower startup time as it needs to decompress itself into a temporary directory every time it runs.</p> <pre><code>make build-exe-dist\n</code></pre> <p>After the build completes, you will find <code>SimpleTimerBank.exe</code> inside the <code>dist/</code> directory. </p>"}]}